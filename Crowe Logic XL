{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6b2fc028",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-13T08:33:26.386454Z",
     "iopub.status.busy": "2025-08-13T08:33:26.386127Z",
     "iopub.status.idle": "2025-08-13T08:33:28.503964Z",
     "shell.execute_reply": "2025-08-13T08:33:28.502832Z"
    },
    "papermill": {
     "duration": 2.122991,
     "end_time": "2025-08-13T08:33:28.505951",
     "exception": false,
     "start_time": "2025-08-13T08:33:26.382960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/scicode/test_data.h5\n",
      "/kaggle/input/scicode/problems_test.jsonl\n",
      "/kaggle/input/scicode/problems_test.csv\n",
      "/kaggle/input/scicode/README.md\n",
      "/kaggle/input/scicode/problems_dev.csv\n",
      "/kaggle/input/scicode/problems_dev.jsonl\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/model.safetensors.index.json\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/config.json\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/model-00001-of-00002.safetensors\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/model-00002-of-00002.safetensors\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/tokenizer.json\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/tokenizer_config.json\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/chat_template.jinja\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/special_tokens_map.json\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/tokenizer.model\n",
      "/kaggle/input/t5gemma/transformers/t5gemma-xl-xl-ul2-it/1/generation_config.json\n",
      "/kaggle/input/arxiv/arxiv-metadata-oai-snapshot.json\n",
      "/kaggle/input/mushroom-classification/mushrooms.csv\n",
      "/kaggle/input/gene-expression-analysis-and-disease-relationship/Gene Expression Analysis and Disease Relationship.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 478,
     "sourceId": 974,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 8006559,
     "sourceId": 12669787,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 612177,
     "sourceId": 12721734,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6983063,
     "sourceId": 11187187,
     "sourceType": "datasetVersion"
    },
    {
     "modelId": 378977,
     "modelInstanceId": 359471,
     "sourceId": 442602,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.793665,
   "end_time": "2025-08-13T08:33:29.027431",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-13T08:33:21.233766",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
