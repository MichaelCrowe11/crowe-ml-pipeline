# Multi-stage Dockerfile for Fly.io deployment
# Crowe ML Pipeline - Production Build

# Stage 1: Python base with scientific libraries
FROM python:3.10-slim as python-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.3.2 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    libhdf5-dev \
    libopenblas-dev \
    gfortran \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Stage 2: Node.js for Vision Platform
FROM node:20-alpine AS node-builder

WORKDIR /app

# Copy Vision Platform files
COPY crowe-vision-platform/package*.json ./
RUN npm ci --only=production

COPY crowe-vision-platform/ ./
RUN npm run build

# Stage 3: Python dependencies
FROM python-base as python-deps

# Install poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

WORKDIR $PYSETUP_PATH

# Copy poetry files
COPY pyproject.toml poetry.lock* ./

# Install dependencies
RUN poetry install --no-dev

# Alternative: use requirements.txt if no poetry
COPY requirements.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Install RDKit
RUN pip install rdkit-pypi

# Stage 4: Final production image
FROM python-base as production

# Copy Python dependencies
COPY --from=python-deps $PYSETUP_PATH $PYSETUP_PATH
COPY --from=python-deps /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages

# Copy Node.js build
COPY --from=node-builder /app/.next /app/crowe-vision-platform/.next
COPY --from=node-builder /app/public /app/crowe-vision-platform/public
COPY --from=node-builder /app/node_modules /app/crowe-vision-platform/node_modules

# Create app directory
WORKDIR /app

# Copy application code
COPY universal-fungal-intelligence-system/ ./universal-fungal-intelligence-system/
COPY crowe-coder/ ./crowe-coder/
COPY crios/ ./crios/
COPY ml-enhancements/ ./ml-enhancements/
COPY scripts/ ./scripts/

# Copy startup script
COPY fly-startup.sh ./
RUN chmod +x fly-startup.sh

# Create data directories
RUN mkdir -p /data/models /data/datasets /data/compounds /data/results

# Install Node.js for running the Vision Platform
RUN apt-get update && apt-get install -y nodejs npm && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV NODE_ENV=production \
    PYTHONPATH=/app/universal-fungal-intelligence-system/src:$PYTHONPATH \
    PORT=8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8080 3000 8501

# Run the application
CMD ["./fly-startup.sh"]
